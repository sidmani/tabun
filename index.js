(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.tabun = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";module.exports=function(){var t=window.location.search.substr(1);if(t.length>0)console.log("received params "+t);else if(!window.localStorage.token){window.location="https://github.com/login/oauth/authorize?client_id=7289916c579cec081358&redirect_uri=https://sidmani.github.io/tabun/auth&scope=gist&state=foobar"}};

},{}],2:[function(require,module,exports){
"use strict";function load(n){if(n.github)return fetch("https://api.github.com/repos/"+n.github+"/contents/deck.json").then(function(n){return n.json()}).then(function(n){return JSON.parse(window.atob(n.content))});throw Error("unsupported deck source")}function generateHTML(n){for(var e='<div class="decks">',t=0;t<n.length;t++)e+='<div class="deck"><span class="deck-name">'+n[t].name+'</span><span class="deck-version">'+n[t].version+"</span></div>";return e+"</div>"}function display(n){var e=[],t=document.getElementById("app");n.decks.map(function(n){return load(n)}).forEach(function(n){n.then(function(n){e.push(n),t.innerHTML=generateHTML(e)})})}module.exports={load:load,display:display};

},{}],3:[function(require,module,exports){
"use strict";var user=require("./user"),decks=require("./decks"),auth=require("./auth"),start=function(e){localStorage.token};module.exports={start:start,decks:decks,auth:auth};

},{"./auth":1,"./decks":2,"./user":4}],4:[function(require,module,exports){
"use strict";module.exports.load=function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]},module.exports.default={decks:[]};

},{}]},{},[3])(3)
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvYXV0aC5qcyIsInNyYy9qcy9kZWNrcy5qcyIsInNyYy9qcy9pbmRleC5qcyIsInNyYy9qcy91c2VyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO2FDQUEsT0FBTyxRQUFVLFdBQ2YsSUFBTSxFQUFTLE9BQU8sU0FBUyxPQUFPLE9BQU8sR0FDN0MsR0FBSSxFQUFPLE9BQVMsRUFFbEIsUUFBUSxJQUFJLG1CQUFxQixRQUM1QixJQUFLLE9BQU8sYUFBYSxNQUFPLENBSXJDLE9BQU8sU0FBVzs7O2FDUHRCLFNBQVMsS0FBSyxHQUNaLEdBQUksRUFBSyxPQUVQLE9BQU8sTUFBTSxnQ0FBa0MsRUFBSyxPQUFTLHVCQUMxRCxLQUFLLFNBQUEsR0FBQSxPQUFPLEVBQUksU0FDaEIsS0FBSyxTQUFBLEdBQUEsT0FBUSxLQUFLLE1BQU0sT0FBTyxLQUFLLEVBQUssWUFFNUMsTUFBTSxNQUFNLDJCQUloQixTQUFTLGFBQWEsR0FFcEIsSUFEQSxJQUFJLEVBQUEsc0JBQ0ssRUFBSSxFQUFHLEVBQUksRUFBTSxPQUFRLElBQ2hDLEdBQUEsNkNBQXVELEVBQU0sR0FBRyxLQUFoRSxxQ0FBeUcsRUFBTSxHQUFHLFFBQWxILGdCQUVGLE9BQU8sRUFBQSxTQUdULFNBQVMsUUFBUSxHQUNmLElBQU0sS0FDQSxFQUFNLFNBQVMsZUFBZSxPQUNwQyxFQUFTLE1BQ04sSUFBSSxTQUFBLEdBQUEsT0FBUSxLQUFLLEtBQ2pCLFFBQVEsU0FBQSxHQUNQLEVBQ0csS0FBSyxTQUFBLEdBQ0osRUFBTSxLQUFLLEdBQ1gsRUFBSSxVQUFZLGFBQWEsT0FNdkMsT0FBTyxTQUFZLEtBQUEsS0FBTSxRQUFBOzs7YUNyQnpCLElBQU0sS0FBTyxRQUFRLFVBQ2YsTUFBUSxRQUFRLFdBQ2hCLEtBQU8sUUFBUSxVQUVmLE1BQVEsU0FBUyxHQUVoQixhQUFhLE9Bd0JwQixPQUFPLFNBQ0wsTUFBQSxNQUNBLE1BQUEsTUFDQSxLQUFBOzs7YUMvQ0YsT0FBTyxRQUFRLEtBQU8sU0FBYyxHQUF5QixVQUFBLE9BQUEsUUFBQSxJQUFBLFVBQUEsSUFBQSxVQUFBLElBSTdELE9BQU8sUUFBUSxTQUNiIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgcGFyYW1zID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSk7XG4gIGlmIChwYXJhbXMubGVuZ3RoID4gMCkge1xuICAgIC8vIHJldHVybiBmcm9tIGdpdGh1YlxuICAgIGNvbnNvbGUubG9nKFwicmVjZWl2ZWQgcGFyYW1zIFwiICsgcGFyYW1zKTtcbiAgfSBlbHNlIGlmICghd2luZG93LmxvY2FsU3RvcmFnZS50b2tlbikge1xuICAgIC8vIHJlZGlyZWN0IHRvIEdpdEh1YlxuICAgIGNvbnN0IHF1ZXJ5c3RyID0gYGNsaWVudF9pZD03Mjg5OTE2YzU3OWNlYzA4MTM1OCZyZWRpcmVjdF91cmk9aHR0cHM6Ly9zaWRtYW5pLmdpdGh1Yi5pby90YWJ1bi9hdXRoJnNjb3BlPWdpc3Qmc3RhdGU9JHtcImZvb2JhclwifWBcblxuICAgIHdpbmRvdy5sb2NhdGlvbiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL2xvZ2luL29hdXRoL2F1dGhvcml6ZT9cIiArIHF1ZXJ5c3RyO1xuICB9IGVsc2Uge1xuICAgIC8vIGNoZWNrIGF1dGg/XG4gIH1cbn1cbiIsIi8vIGNvbnN0IGZldGNoID0gcmVxdWlyZSgnZmV0Y2gnKTtcblxuZnVuY3Rpb24gbG9hZChkZWNrKSB7XG4gIGlmIChkZWNrLmdpdGh1Yikge1xuICAgIC8vIHVzZSBwdWJsaWMgZ2l0aHViIEFQSSB0byBsb2FkXG4gICAgcmV0dXJuIGZldGNoKCdodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zLycgKyBkZWNrLmdpdGh1YiArICcvY29udGVudHMvZGVjay5qc29uJylcbiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgLnRoZW4oanNvbiA9PiBKU09OLnBhcnNlKHdpbmRvdy5hdG9iKGpzb24uY29udGVudCkpKVxuICB9IGVsc2Uge1xuICAgIHRocm93IEVycm9yKCd1bnN1cHBvcnRlZCBkZWNrIHNvdXJjZScpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZW5lcmF0ZUhUTUwoZGVja3MpIHtcbiAgbGV0IHJlc3VsdCA9IGA8ZGl2IGNsYXNzPVwiZGVja3NcIj5gO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRlY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0ICs9IGA8ZGl2IGNsYXNzPVwiZGVja1wiPjxzcGFuIGNsYXNzPVwiZGVjay1uYW1lXCI+JHtkZWNrc1tpXS5uYW1lfTwvc3Bhbj48c3BhbiBjbGFzcz1cImRlY2stdmVyc2lvblwiPiR7ZGVja3NbaV0udmVyc2lvbn08L3NwYW4+PC9kaXY+YDtcbiAgfVxuICByZXR1cm4gcmVzdWx0ICsgYDwvZGl2PmA7XG59O1xuXG5mdW5jdGlvbiBkaXNwbGF5KHNldHRpbmdzKSB7XG4gIGNvbnN0IGRlY2tzID0gW107XG4gIGNvbnN0IGFwcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKTtcbiAgc2V0dGluZ3MuZGVja3NcbiAgICAubWFwKGRlY2sgPT4gbG9hZChkZWNrKSlcbiAgICAuZm9yRWFjaChkZWNrUHJvbWlzZSA9PiB7XG4gICAgICBkZWNrUHJvbWlzZVxuICAgICAgICAudGhlbihkID0+IHtcbiAgICAgICAgICBkZWNrcy5wdXNoKGQpO1xuICAgICAgICAgIGFwcC5pbm5lckhUTUwgPSBnZW5lcmF0ZUhUTUwoZGVja3MpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbG9hZCwgZGlzcGxheSB9O1xuIiwiLy8gVGFidW4gLSBhIGRpc3RyaWJ1dGVkLCBleHRlbnNpYmxlIHNwYWNlZC1yZXBldGl0aW9uIGZsYXNoY2FyZCBzb2Z0d2FyZVxuLy8gQ29weXJpZ2h0IChDKSAyMDE4IFNpZCBNYW5pXG4vL1xuLy8gVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbi8vIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzXG4vLyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbi8vIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4vL1xuLy8gVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4vLyBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuLy8gTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuLy8gR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4vL1xuLy8gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4vLyBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG5jb25zdCB1c2VyID0gcmVxdWlyZSgnLi91c2VyJyk7XG5jb25zdCBkZWNrcyA9IHJlcXVpcmUoJy4vZGVja3MnKTtcbmNvbnN0IGF1dGggPSByZXF1aXJlKCcuL2F1dGgnKTtcblxuY29uc3Qgc3RhcnQgPSBmdW5jdGlvbihxdWVyeWRpY3QpIHtcblxuICBpZiAoIWxvY2FsU3RvcmFnZS50b2tlbikge1xuICAgIC8vIHRva2VuIGRvZXNuJ3QgZXhpc3QsIGxvZ2luIHdpdGggZ2l0aHViXG4gICAgLy8gbG9jYWxTdG9yYWdlLnNldHRpbmdzID0gSlNPTi5zdHJpbmdpZnkoe1xuICAgIC8vICAgZGVja3M6IFt7XG4gICAgLy8gICAgIGdpdGh1YjogXCJzaWRtYW5pL3RhYnVuX2V4YW1wbGVcIixcbiAgICAvLyAgICAgdmVyc2lvbjogXCIwLjAuMVwiLFxuICAgIC8vICAgfV1cbiAgICAvLyB9KTtcblxuICB9XG5cbiAgLy8gY29uc3Qgc2V0dGluZ3MgPSBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0dGluZ3MpO1xuICAvLyBjb25zdCBkZWNrcyA9IHNldHRpbmdzLmRlY2tzO1xuICAvLyAvLyBsb2FkIGRlY2tzXG4gIC8vIGNvbnN0IGxvYWRlZERlY2tzID0gW107XG4gIC8vIGZvciAobGV0IGkgPSAwOyBpIDwgZGVja3MubGVuZ3RoOyBpKyspIHtcbiAgLy8gICBkZWNrLmxvYWQoZGVja3NbaV0pXG4gIC8vICAgICAudGhlbihkID0+IHtcbiAgLy8gICAgICAgbG9hZGVkRGVja3MucHVzaChkKTtcbiAgLy8gICAgICAgYXBwLmlubmVySFRNTCA9IGRpc3BsYXlEZWNrcyhsb2FkZWREZWNrcyk7XG4gIC8vICAgICB9KTtcbiAgLy8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0LFxuICBkZWNrcyxcbiAgYXV0aCxcbn07XG4iLCIvLyBsb2FkIHVzZXIgY29uZmlnIGZpbGVzXG5tb2R1bGUuZXhwb3J0cy5sb2FkID0gZnVuY3Rpb24gbG9hZCh1cmwsIHR5cGU9J2dpdGh1Yl9naXN0Jykge1xuXG59XG5cbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGRlY2tzOiBbXSxcbn07XG4iXX0=
